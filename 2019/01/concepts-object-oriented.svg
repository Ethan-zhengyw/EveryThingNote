<svg id="kity_svg_6" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="1604" height="3550" style="background: rgb(251, 251, 251); visibility: visible;" viewBox="0 0 1604 3550"><defs id="kity_defs_7"><linearGradient id="kity_linearGradient_17" x1="0" y1="0" x2="0" y2="1"><stop id="kity_stop_18" offset="0" stop-color="rgb(255, 255, 255)"></stop><stop id="kity_stop_19" offset="1" stop-color="rgb(204, 204, 204)"></stop></linearGradient><marker id="kity_marker_2" orient="auto" refX="6" refY="0" viewBox="-7 -7 14 14" markerWidth="7" markerHeight="7" markerUnits="userSpaceOnUse"><path id="kity_path_3" fill="rgb(115, 161, 191)" stroke="none" d="M6,0A6,6,0,1,1,-6,0A6,6,0,1,1,6,0"></path></marker></defs><g id="kity_g_8"><g id="minder1" text-rendering="optimize-speed"><g id="minder_connect_group1"><path id="kity_path_31" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M172.5,1703.5A270,1646,0,0,1,442.5,57.5"></path><path id="kity_path_33" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M512.5,57.5C532.5,57.5,532.5,31.5,552.5,31.5"></path><path id="kity_path_35" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M512.5,57.5C532.5,57.5,532.5,83.5,552.5,83.5"></path><path id="kity_path_37" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M172.5,1703.5A270,1556,0,0,1,442.5,147.5"></path><path id="kity_path_39" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M568.5,147.5C588.5,147.5,588.5,147.5,608.5,147.5"></path><path id="kity_path_41" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M172.5,1703.5A270,1336,0,0,1,442.5,367.5"></path><path id="kity_path_43" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M498.5,367.5C518.5,367.5,518.5,367.5,538.5,367.5"></path><path id="kity_path_45" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M786.5,367.5C806.5,367.5,806.5,211.5,826.5,211.5"></path><path id="kity_path_47" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M786.5,367.5C806.5,367.5,806.5,289.5,826.5,289.5"></path><path id="kity_path_49" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M894.5,289.5C914.5,289.5,914.5,263.5,934.5,263.5"></path><path id="kity_path_51" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M894.5,289.5C914.5,289.5,914.5,315.5,934.5,315.5"></path><path id="kity_path_53" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M786.5,367.5C806.5,367.5,806.5,367.5,826.5,367.5"></path><path id="kity_path_55" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M870.5,367.5C890.5,367.5,890.5,367.5,910.5,367.5"></path><path id="kity_path_57" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M786.5,367.5C806.5,367.5,806.5,419.5,826.5,419.5"></path><path id="kity_path_59" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M870.5,419.5C890.5,419.5,890.5,419.5,910.5,419.5"></path><path id="kity_path_61" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M786.5,367.5C806.5,367.5,806.5,523.5,826.5,523.5"></path><path id="kity_path_63" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M882.5,523.5C902.5,523.5,902.5,471.5,922.5,471.5"></path><path id="kity_path_65" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M882.5,523.5C902.5,523.5,902.5,523.5,922.5,523.5"></path><path id="kity_path_67" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M882.5,523.5C902.5,523.5,902.5,575.5,922.5,575.5"></path><path id="kity_path_69" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M172.5,1703.5A270,1064,0,0,1,442.5,639.5"></path><path id="kity_path_71" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M512.5,639.5C532.5,639.5,532.5,639.5,552.5,639.5"></path><path id="kity_path_73" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M172.5,1703.5A270,441,0,0,1,442.5,1262.5"></path><path id="kity_path_75" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M540.5,1262.5C560.5,1262.5,560.5,833.5,580.5,833.5"></path><path id="kity_path_77" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M624.5,833.5C644.5,833.5,644.5,703.5,664.5,703.5"></path><path id="kity_path_79" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M624.5,833.5C644.5,833.5,644.5,820.5,664.5,820.5"></path><path id="kity_path_81" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M708.5,820.5C728.5,820.5,728.5,755.5,748.5,755.5"></path><path id="kity_path_83" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M708.5,820.5C728.5,820.5,728.5,807.5,748.5,807.5"></path><path id="kity_path_85" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M708.5,820.5C728.5,820.5,728.5,885.5,748.5,885.5"></path><path id="kity_path_87" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M888.5,885.5C908.5,885.5,908.5,859.5,928.5,859.5"></path><path id="kity_path_89" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M888.5,885.5C908.5,885.5,908.5,911.5,928.5,911.5"></path><path id="kity_path_91" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M624.5,833.5C644.5,833.5,644.5,963.5,664.5,963.5"></path><path id="kity_path_93" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M540.5,1262.5C560.5,1262.5,560.5,1249.5,580.5,1249.5"></path><path id="kity_path_95" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M624.5,1249.5C644.5,1249.5,644.5,1015.5,664.5,1015.5"></path><path id="kity_path_97" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M624.5,1249.5C644.5,1249.5,644.5,1093.5,664.5,1093.5"></path><path id="kity_path_99" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M996.5,1093.5C1016.5,1093.5,1016.5,1067.5,1036.5,1067.5"></path><path id="kity_path_101" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M996.5,1093.5C1016.5,1093.5,1016.5,1119.5,1036.5,1119.5"></path><path id="kity_path_103" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M624.5,1249.5C644.5,1249.5,644.5,1249.5,664.5,1249.5"></path><path id="kity_path_105" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M768.5,1249.5C788.5,1249.5,788.5,1171.5,808.5,1171.5"></path><path id="kity_path_107" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M768.5,1249.5C788.5,1249.5,788.5,1223.5,808.5,1223.5"></path><path id="kity_path_109" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M768.5,1249.5C788.5,1249.5,788.5,1275.5,808.5,1275.5"></path><path id="kity_path_111" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M768.5,1249.5C788.5,1249.5,788.5,1327.5,808.5,1327.5"></path><path id="kity_path_113" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M624.5,1249.5C644.5,1249.5,644.5,1379.5,664.5,1379.5"></path><path id="kity_path_115" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M624.5,1249.5C644.5,1249.5,644.5,1431.5,664.5,1431.5"></path><path id="kity_path_117" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M708.5,1431.5C728.5,1431.5,728.5,1431.5,748.5,1431.5"></path><path id="kity_path_119" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M540.5,1262.5C560.5,1262.5,560.5,1691.5,580.5,1691.5"></path><path id="kity_path_391" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M624.5,1249.5C644.5,1249.5,644.5,1483.5,664.5,1483.5"></path><path id="kity_path_407" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M708.5,1483.5C728.5,1483.5,728.5,1483.5,748.5,1483.5"></path><path id="kity_path_423" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M624.5,1691.5C644.5,1691.5,644.5,1535.5,664.5,1535.5"></path><path id="kity_path_431" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M624.5,1691.5C644.5,1691.5,644.5,1639.5,664.5,1639.5"></path><path id="kity_path_463" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M624.5,1691.5C644.5,1691.5,644.5,1769.5,664.5,1769.5"></path><path id="kity_path_471" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M732.5,1769.5C752.5,1769.5,752.5,1743.5,772.5,1743.5"></path><path id="kity_path_479" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M732.5,1769.5C752.5,1769.5,752.5,1795.5,772.5,1795.5"></path><path id="kity_path_487" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M172.5,1703.5A270,232,0,0,0,442.5,1935.5"></path><path id="kity_path_495" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M512.5,1935.5C532.5,1935.5,532.5,1909.5,552.5,1909.5"></path><path id="kity_path_513" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M708.5,1639.5C728.5,1639.5,728.5,1587.5,748.5,1587.5"></path><path id="kity_path_514" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M708.5,1639.5C728.5,1639.5,728.5,1639.5,748.5,1639.5"></path><path id="kity_path_515" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M708.5,1639.5C728.5,1639.5,728.5,1691.5,748.5,1691.5"></path><path id="kity_path_517" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M172.5,1703.5A270,411,0,0,0,442.5,2114.5"></path><path id="kity_path_525" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M526.5,2114.5C546.5,2114.5,546.5,2023.5,566.5,2023.5"></path><path id="kity_path_533" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M526.5,2114.5C546.5,2114.5,546.5,2075.5,566.5,2075.5"></path><path id="kity_path_549" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M624.5,1691.5C644.5,1691.5,644.5,1847.5,664.5,1847.5"></path><path id="kity_path_557" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M634.5,2075.5C654.5,2075.5,654.5,2075.5,674.5,2075.5"></path><path id="kity_path_565" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M526.5,2114.5C546.5,2114.5,546.5,2205.5,566.5,2205.5"></path><path id="kity_path_573" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M610.5,2205.5C630.5,2205.5,630.5,2127.5,650.5,2127.5"></path><path id="kity_path_581" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M610.5,2205.5C630.5,2205.5,630.5,2179.5,650.5,2179.5"></path><path id="kity_path_589" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M610.5,2205.5C630.5,2205.5,630.5,2231.5,650.5,2231.5"></path><path id="kity_path_613" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M172.5,1703.5A270,694,0,0,0,442.5,2397.5"></path><path id="kity_path_621" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M512.5,2397.5C532.5,2397.5,532.5,2345.5,552.5,2345.5"></path><path id="kity_path_629" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M512.5,2397.5C532.5,2397.5,532.5,2397.5,552.5,2397.5"></path><path id="kity_path_645" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M512.5,2397.5C532.5,2397.5,532.5,2449.5,552.5,2449.5"></path><path id="kity_path_661" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M610.5,2205.5C630.5,2205.5,630.5,2283.5,650.5,2283.5"></path><path id="kity_path_677" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M512.5,1935.5C532.5,1935.5,532.5,1961.5,552.5,1961.5"></path><path id="kity_path_685" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M172.5,1703.5A270,944,0,0,0,442.5,2647.5"></path><path id="kity_path_693" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M512.5,2647.5C532.5,2647.5,532.5,2537.5,552.5,2537.5"></path><path id="kity_path_701" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M596.5,2537.5C616.5,2537.5,616.5,2511.5,636.5,2511.5"></path><path id="kity_path_709" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M596.5,2537.5C616.5,2537.5,616.5,2563.5,636.5,2563.5"></path><path id="kity_path_717" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M512.5,2647.5C532.5,2647.5,532.5,2615.5,552.5,2615.5"></path><path id="kity_path_725" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M596.5,2758.5C616.5,2758.5,616.5,2719.5,636.5,2719.5"></path><path id="kity_path_733" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M512.5,2647.5C532.5,2647.5,532.5,2667.5,552.5,2667.5"></path><path id="kity_path_741" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M512.5,2647.5C532.5,2647.5,532.5,2758.5,552.5,2758.5"></path><path id="kity_path_749" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M596.5,2667.5C616.5,2667.5,616.5,2667.5,636.5,2667.5"></path><path id="kity_path_757" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M596.5,2758.5C616.5,2758.5,616.5,2797.5,636.5,2797.5"></path><path id="kity_path_765" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M824.5,2797.5C844.5,2797.5,844.5,2771.5,864.5,2771.5"></path><path id="kity_path_773" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M824.5,2797.5C844.5,2797.5,844.5,2823.5,864.5,2823.5"></path><path id="kity_path_781" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M172.5,1703.5A270,1325,0,0,0,442.5,3028.5"></path><path id="kity_path_789" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M512.5,3028.5C532.5,3028.5,532.5,2885.5,552.5,2885.5"></path><path id="kity_path_797" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M512.5,3028.5C532.5,3028.5,532.5,2963.5,552.5,2963.5"></path><path id="kity_path_805" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M632.5,2963.5C652.5,2963.5,652.5,2937.5,672.5,2937.5"></path><path id="kity_path_813" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M632.5,2963.5C652.5,2963.5,652.5,2989.5,672.5,2989.5"></path><path id="kity_path_829" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M512.5,3028.5C532.5,3028.5,532.5,3067.5,552.5,3067.5"></path><path id="kity_path_837" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M620.5,3067.5C640.5,3067.5,640.5,3041.5,660.5,3041.5"></path><path id="kity_path_845" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M620.5,3067.5C640.5,3067.5,640.5,3093.5,660.5,3093.5"></path><path id="kity_path_861" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M512.5,3028.5C532.5,3028.5,532.5,3171.5,552.5,3171.5"></path><path id="kity_path_869" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M596.5,3171.5C616.5,3171.5,616.5,3145.5,636.5,3145.5"></path><path id="kity_path_877" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M596.5,3171.5C616.5,3171.5,616.5,3197.5,636.5,3197.5"></path><path id="kity_path_885" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M172.5,1703.5A270,1647,0,0,0,442.5,3350.5"></path><path id="kity_path_893" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M554.5,3350.5C574.5,3350.5,574.5,3259.5,594.5,3259.5"></path><path id="kity_path_901" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M554.5,3350.5C574.5,3350.5,574.5,3311.5,594.5,3311.5"></path><path id="kity_path_909" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1004.5,3259.5C1024.5,3259.5,1024.5,3259.5,1044.5,3259.5"></path><path id="kity_path_917" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M554.5,3350.5C574.5,3350.5,574.5,3441.5,594.5,3441.5"></path><path id="kity_path_925" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M662.5,3441.5C682.5,3441.5,682.5,3363.5,702.5,3363.5"></path><path id="kity_path_933" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M662.5,3441.5C682.5,3441.5,682.5,3519.5,702.5,3519.5"></path><path id="kity_path_941" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M662.5,3441.5C682.5,3441.5,682.5,3415.5,702.5,3415.5"></path><path id="kity_path_949" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1164.5,3311.5C1184.5,3311.5,1184.5,3311.5,1204.5,3311.5"></path><path id="kity_path_957" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M806.5,3363.5C826.5,3363.5,826.5,3363.5,846.5,3363.5"></path><path id="kity_path_965" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M662.5,3441.5C682.5,3441.5,682.5,3467.5,702.5,3467.5"></path></g><g id="minder_node1"><path id="node_outline1" fill="rgb(115, 161, 191)" stroke="rgb(115, 161, 191)" d="M25.5,1683.5h294a5,5,0,0,1,5,5v30a5,5,0,0,1,-5,5h-294a5,5,0,0,1,-5,-5v-30a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text1" fill="white"><text id="kity_text_22" text-rendering="inherit" font-size="16" dy=".8em" y="1695.5" x="44.5">附录A 培训实习生——面向对象基础</text></g></g><g id="kity_g_14" display="none"><path id="kity_path_15" fill="rgba(0, 92, 153, 0.5)" stroke="none" d="M594.5,3294.5h332v15h-332z"></path><path id="kity_path_16" fill="none" stroke="rgb(0, 76, 128)" d="M594.5,3294.5L926.5,3294.5" stroke-width="1"></path></g><g id="minder_node2"><g id="node_expander3" style="cursor: pointer;"><path id="kity_path_262" fill="white" stroke="gray" d="M443.5,57.5A6,6,0,1,1,431.5,57.5A6,6,0,1,1,443.5,57.5"></path><path id="kity_path_263" fill="none" stroke="gray" d="M433,57.5L442,57.5"></path></g><path id="node_outline4" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M447.5,44.5h62a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-62a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text4" fill="black"><text id="kity_text_125" text-rendering="inherit" font-size="14" dy=".8em" y="50.5" x="464.5">对象</text></g></g><g id="minder_node3"><g id="node_expander1" style="cursor: pointer;" display="none"><path id="kity_path_256" fill="white" stroke="gray" d="M552.5,31.5A6,6,0,1,1,540.5,31.5A6,6,0,1,1,552.5,31.5"></path><path id="kity_path_257" fill="none" stroke="gray"></path></g><path id="node_outline2" fill="none" stroke="none" d="M557.5,20.5h226a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-226a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text2" fill="black"><text id="kity_text_121" text-rendering="inherit" font-size="12" dy=".8em" y="25.5" x="562.5">一切事物皆为对象，所有的东西都是对象</text></g></g><g id="minder_node4"><g id="node_expander2" style="cursor: pointer;" display="none"><path id="kity_path_259" fill="white" stroke="gray" d="M552.5,83.5A6,6,0,1,1,540.5,83.5A6,6,0,1,1,552.5,83.5"></path><path id="kity_path_260" fill="none" stroke="gray"></path></g><path id="node_outline3" fill="none" stroke="none" d="M557.5,72.5h358a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-358a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text3" fill="black"><text id="kity_text_123" text-rendering="inherit" font-size="12" dy=".8em" y="77.5" x="562.5">对象是一个自包含的实体，可以用一组可识别的特性和行为来标识</text></g></g><g id="minder_node5"><g id="node_expander5" style="cursor: pointer;"><path id="kity_path_268" fill="white" stroke="gray" d="M443.5,147.5A6,6,0,1,1,431.5,147.5A6,6,0,1,1,443.5,147.5"></path><path id="kity_path_269" fill="none" stroke="gray" d="M433,147.5L442,147.5"></path></g><path id="node_outline6" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M447.5,134.5h118a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-118a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text6" fill="black"><text id="kity_text_129" text-rendering="inherit" font-size="14" dy=".8em" y="140.5" x="464.5">面向对象编程</text></g></g><g id="minder_node6"><g id="node_expander4" style="cursor: pointer;" display="none"><path id="kity_path_265" fill="white" stroke="gray" d="M608.5,147.5A6,6,0,1,1,596.5,147.5A6,6,0,1,1,608.5,147.5"></path><path id="kity_path_266" fill="none" stroke="gray"></path></g><path id="node_outline5" fill="none" stroke="none" d="M613.5,136.5h118a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-118a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text5" fill="black"><text id="kity_text_127" text-rendering="inherit" font-size="12" dy=".8em" y="141.5" x="618.5">针对对象来进行编程</text></g></g><g id="minder_node7"><g id="node_expander19" style="cursor: pointer;"><path id="kity_path_310" fill="white" stroke="gray" d="M443.5,367.5A6,6,0,1,1,431.5,367.5A6,6,0,1,1,443.5,367.5"></path><path id="kity_path_311" fill="none" stroke="gray" d="M433,367.5L442,367.5"></path></g><path id="node_outline20" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M447.5,354.5h48a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-48a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text20" fill="black"><text id="kity_text_157" text-rendering="inherit" font-size="14" dy=".8em" y="360.5" x="464.5">类</text></g></g><g id="minder_node8"><g id="node_expander18" style="cursor: pointer;"><path id="kity_path_307" fill="white" stroke="gray" d="M538.5,367.5A6,6,0,1,1,526.5,367.5A6,6,0,1,1,538.5,367.5"></path><path id="kity_path_308" fill="none" stroke="gray" d="M528,367.5L537,367.5"></path></g><path id="node_outline19" fill="none" stroke="none" d="M543.5,356.5h238a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-238a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text19" fill="black"><text id="kity_text_155" text-rendering="inherit" font-size="12" dy=".8em" y="361.5" x="548.5">具有相同的属性和功能的对象的抽象的集合</text></g></g><g id="minder_node9"><g id="node_expander6" style="cursor: pointer;" display="none"><path id="kity_path_271" fill="white" stroke="gray" d="M826.5,211.5A6,6,0,1,1,814.5,211.5A6,6,0,1,1,826.5,211.5"></path><path id="kity_path_272" fill="none" stroke="gray"></path></g><path id="node_outline7" fill="none" stroke="none" d="M831.5,200.5h154a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-154a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text7" fill="black"><text id="kity_text_131" text-rendering="inherit" font-size="12" dy=".8em" y="205.5" x="836.5">方法、构造方法、析构函数</text></g></g><g id="minder_node10"><g id="node_expander9" style="cursor: pointer;"><path id="kity_path_280" fill="white" stroke="gray" d="M826.5,289.5A6,6,0,1,1,814.5,289.5A6,6,0,1,1,826.5,289.5"></path><path id="kity_path_281" fill="none" stroke="gray" d="M816,289.5L825,289.5"></path></g><path id="node_outline10" fill="none" stroke="none" d="M831.5,278.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text10" fill="black"><text id="kity_text_137" text-rendering="inherit" font-size="12" dy=".8em" y="283.5" x="836.5">方法重载</text></g></g><g id="minder_node11"><g id="node_expander7" style="cursor: pointer;" display="none"><path id="kity_path_274" fill="white" stroke="gray" d="M934.5,263.5A6,6,0,1,1,922.5,263.5A6,6,0,1,1,934.5,263.5"></path><path id="kity_path_275" fill="none" stroke="gray"></path></g><path id="node_outline8" fill="none" stroke="none" d="M939.5,252.5h358a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-358a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text8" fill="black"><text id="kity_text_133" text-rendering="inherit" font-size="12" dy=".8em" y="257.5" x="944.5">提供了创建多个同名的方法的能力，但参数的类型或个数有所不同</text></g></g><g id="minder_node12"><g id="node_expander8" style="cursor: pointer;" display="none"><path id="kity_path_277" fill="white" stroke="gray" d="M934.5,315.5A6,6,0,1,1,922.5,315.5A6,6,0,1,1,934.5,315.5"></path><path id="kity_path_278" fill="none" stroke="gray"></path></g><path id="node_outline9" fill="none" stroke="none" d="M939.5,304.5h358a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-358a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text9" fill="black"><text id="kity_text_135" text-rendering="inherit" font-size="12" dy=".8em" y="309.5" x="944.5">提供了函数可扩展的能力——在不改变原方法的基础上，新增功能</text></g></g><g id="minder_node13"><g id="node_expander11" style="cursor: pointer;"><path id="kity_path_286" fill="white" stroke="gray" d="M826.5,367.5A6,6,0,1,1,814.5,367.5A6,6,0,1,1,826.5,367.5"></path><path id="kity_path_287" fill="none" stroke="gray" d="M816,367.5L825,367.5"></path></g><path id="node_outline12" fill="none" stroke="none" d="M831.5,356.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text12" fill="black"><text id="kity_text_141" text-rendering="inherit" font-size="12" dy=".8em" y="361.5" x="836.5">属性</text></g></g><g id="minder_node14"><g id="node_expander10" style="cursor: pointer;" display="none"><path id="kity_path_283" fill="white" stroke="gray" d="M910.5,367.5A6,6,0,1,1,898.5,367.5A6,6,0,1,1,910.5,367.5"></path><path id="kity_path_284" fill="none" stroke="gray"></path></g><path id="node_outline11" fill="none" stroke="none" d="M915.5,356.5h598a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-598a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text11" fill="black"><text id="kity_text_139" text-rendering="inherit" font-size="12" dy=".8em" y="361.5" x="920.5">属性是一个方法或一对方法，但在调用它的代码看来，它是一个字段，适合于以字段的方式使用方法调用的场景</text></g></g><g id="minder_node15"><g id="node_expander13" style="cursor: pointer;"><path id="kity_path_292" fill="white" stroke="gray" d="M826.5,419.5A6,6,0,1,1,814.5,419.5A6,6,0,1,1,826.5,419.5"></path><path id="kity_path_293" fill="none" stroke="gray" d="M816,419.5L825,419.5"></path></g><path id="node_outline14" fill="none" stroke="none" d="M831.5,408.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text14" fill="black"><text id="kity_text_145" text-rendering="inherit" font-size="12" dy=".8em" y="413.5" x="836.5">变量</text></g></g><g id="minder_node16"><g id="node_expander12" style="cursor: pointer;" display="none"><path id="kity_path_289" fill="white" stroke="gray" d="M910.5,419.5A6,6,0,1,1,898.5,419.5A6,6,0,1,1,910.5,419.5"></path><path id="kity_path_290" fill="none" stroke="gray"></path></g><path id="node_outline13" fill="none" stroke="none" d="M915.5,408.5h166a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-166a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text13" fill="black"><text id="kity_text_143" text-rendering="inherit" font-size="12" dy=".8em" y="413.5" x="920.5">存储类满足设计所需要的数据</text></g></g><g id="minder_node17"><g id="node_expander17" style="cursor: pointer;"><path id="kity_path_304" fill="white" stroke="gray" d="M826.5,523.5A6,6,0,1,1,814.5,523.5A6,6,0,1,1,826.5,523.5"></path><path id="kity_path_305" fill="none" stroke="gray" d="M816,523.5L825,523.5"></path></g><path id="node_outline18" fill="none" stroke="none" d="M831.5,512.5h46a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-46a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text18" fill="black"><text id="kity_text_153" text-rendering="inherit" font-size="12" dy=".8em" y="517.5" x="836.5">修饰符</text></g></g><g id="minder_node18"><g id="node_expander14" style="cursor: pointer;" display="none"><path id="kity_path_295" fill="white" stroke="gray" d="M922.5,471.5A6,6,0,1,1,910.5,471.5A6,6,0,1,1,922.5,471.5"></path><path id="kity_path_296" fill="none" stroke="gray"></path></g><path id="node_outline15" fill="none" stroke="none" d="M927.5,460.5h46a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-46a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text15" fill="black"><text id="kity_text_147" text-rendering="inherit" font-size="12" dy=".8em" y="465.5" x="932.5">public</text></g></g><g id="minder_node19"><g id="node_expander15" style="cursor: pointer;" display="none"><path id="kity_path_298" fill="white" stroke="gray" d="M922.5,523.5A6,6,0,1,1,910.5,523.5A6,6,0,1,1,922.5,523.5"></path><path id="kity_path_299" fill="none" stroke="gray"></path></g><path id="node_outline16" fill="none" stroke="none" d="M927.5,512.5h51a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-51a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text16" fill="black"><text id="kity_text_149" text-rendering="inherit" font-size="12" dy=".8em" y="517.5" x="932.5">private</text></g></g><g id="minder_node20"><g id="node_expander16" style="cursor: pointer;" display="none"><path id="kity_path_301" fill="white" stroke="gray" d="M922.5,575.5A6,6,0,1,1,910.5,575.5A6,6,0,1,1,922.5,575.5"></path><path id="kity_path_302" fill="none" stroke="gray"></path></g><path id="node_outline17" fill="none" stroke="none" d="M927.5,564.5h69a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-69a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text17" fill="black"><text id="kity_text_151" text-rendering="inherit" font-size="12" dy=".8em" y="569.5" x="932.5">protected</text></g></g><g id="minder_node21"><g id="node_expander21" style="cursor: pointer;"><path id="kity_path_316" fill="white" stroke="gray" d="M443.5,639.5A6,6,0,1,1,431.5,639.5A6,6,0,1,1,443.5,639.5"></path><path id="kity_path_317" fill="none" stroke="gray" d="M433,639.5L442,639.5"></path></g><path id="node_outline22" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M447.5,626.5h62a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-62a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text22" fill="black"><text id="kity_text_161" text-rendering="inherit" font-size="14" dy=".8em" y="632.5" x="464.5">实例</text></g></g><g id="minder_node22"><g id="node_expander20" style="cursor: pointer;" display="none"><path id="kity_path_313" fill="white" stroke="gray" d="M552.5,639.5A6,6,0,1,1,540.5,639.5A6,6,0,1,1,552.5,639.5"></path><path id="kity_path_314" fill="none" stroke="gray"></path></g><path id="node_outline21" fill="none" stroke="none" d="M557.5,628.5h154a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-154a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text21" fill="black"><text id="kity_text_159" text-rendering="inherit" font-size="12" dy=".8em" y="633.5" x="562.5">属于某一个类的真实的对象</text></g></g><g id="minder_node23"><g id="node_expander45" style="cursor: pointer;"><path id="kity_path_388" fill="white" stroke="gray" d="M443.5,1262.5A6,6,0,1,1,431.5,1262.5A6,6,0,1,1,443.5,1262.5"></path><path id="kity_path_389" fill="none" stroke="gray" d="M433,1262.5L442,1262.5"></path></g><path id="node_outline46" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M447.5,1249.5h90a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-90a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text46" fill="black"><text id="kity_text_209" text-rendering="inherit" font-size="14" dy=".8em" y="1255.5" x="464.5">三大特性</text></g></g><g id="minder_node24"><g id="node_expander30" style="cursor: pointer;"><path id="kity_path_343" fill="white" stroke="gray" d="M580.5,833.5A6,6,0,1,1,568.5,833.5A6,6,0,1,1,580.5,833.5"></path><path id="kity_path_344" fill="none" stroke="gray" d="M570,833.5L579,833.5"></path></g><path id="node_outline31" fill="none" stroke="none" d="M585.5,822.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text31" fill="black"><text id="kity_text_179" text-rendering="inherit" font-size="12" dy=".8em" y="827.5" x="590.5">封装</text></g></g><g id="minder_node25"><g id="node_expander22" style="cursor: pointer;" display="none"><path id="kity_path_319" fill="white" stroke="gray" d="M664.5,703.5A6,6,0,1,1,652.5,703.5A6,6,0,1,1,664.5,703.5"></path><path id="kity_path_320" fill="none" stroke="gray"></path></g><path id="node_outline23" fill="none" stroke="none" d="M669.5,692.5h526a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-526a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text23" fill="black"><text id="kity_text_163" text-rendering="inherit" font-size="12" dy=".8em" y="697.5" x="674.5">每个对象都包含它能进行的操作所需要的所有信息，因此对象不必依赖其他对象来完成自己的操作</text></g></g><g id="minder_node26"><g id="node_expander28" style="cursor: pointer;"><path id="kity_path_337" fill="white" stroke="gray" d="M664.5,820.5A6,6,0,1,1,652.5,820.5A6,6,0,1,1,664.5,820.5"></path><path id="kity_path_338" fill="none" stroke="gray" d="M654,820.5L663,820.5"></path></g><path id="node_outline29" fill="none" stroke="none" d="M669.5,809.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text29" fill="black"><text id="kity_text_175" text-rendering="inherit" font-size="12" dy=".8em" y="814.5" x="674.5">好处</text></g></g><g id="minder_node27"><g id="node_expander23" style="cursor: pointer;" display="none"><path id="kity_path_322" fill="white" stroke="gray" d="M748.5,755.5A6,6,0,1,1,736.5,755.5A6,6,0,1,1,748.5,755.5"></path><path id="kity_path_323" fill="none" stroke="gray"></path></g><path id="node_outline24" fill="none" stroke="none" d="M753.5,744.5h142a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-142a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text24" fill="black"><text id="kity_text_165" text-rendering="inherit" font-size="12" dy=".8em" y="749.5" x="758.5">良好的封装能够减少耦合</text></g></g><g id="minder_node28"><g id="node_expander24" style="cursor: pointer;" display="none"><path id="kity_path_325" fill="white" stroke="gray" d="M748.5,807.5A6,6,0,1,1,736.5,807.5A6,6,0,1,1,748.5,807.5"></path><path id="kity_path_326" fill="none" stroke="gray"></path></g><path id="node_outline25" fill="none" stroke="none" d="M753.5,796.5h166a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-166a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text25" fill="black"><text id="kity_text_167" text-rendering="inherit" font-size="12" dy=".8em" y="801.5" x="758.5">类内部的实现可以自由地修改</text></g></g><g id="minder_node29"><g id="node_expander27" style="cursor: pointer;"><path id="kity_path_334" fill="white" stroke="gray" d="M748.5,885.5A6,6,0,1,1,736.5,885.5A6,6,0,1,1,748.5,885.5"></path><path id="kity_path_335" fill="none" stroke="gray" d="M738,885.5L747,885.5"></path></g><path id="node_outline28" fill="none" stroke="none" d="M753.5,874.5h130a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-130a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text28" fill="black"><text id="kity_text_173" text-rendering="inherit" font-size="12" dy=".8em" y="879.5" x="758.5">类具有清晰的对外接口</text></g></g><g id="minder_node30"><g id="node_expander25" style="cursor: pointer;" display="none"><path id="kity_path_328" fill="white" stroke="gray" d="M928.5,859.5A6,6,0,1,1,916.5,859.5A6,6,0,1,1,928.5,859.5"></path><path id="kity_path_329" fill="none" stroke="gray"></path></g><path id="node_outline26" fill="none" stroke="none" d="M933.5,848.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text26" fill="black"><text id="kity_text_169" text-rendering="inherit" font-size="12" dy=".8em" y="853.5" x="938.5">属性</text></g></g><g id="minder_node31"><g id="node_expander26" style="cursor: pointer;" display="none"><path id="kity_path_331" fill="white" stroke="gray" d="M928.5,911.5A6,6,0,1,1,916.5,911.5A6,6,0,1,1,928.5,911.5"></path><path id="kity_path_332" fill="none" stroke="gray"></path></g><path id="node_outline27" fill="none" stroke="none" d="M933.5,900.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text27" fill="black"><text id="kity_text_171" text-rendering="inherit" font-size="12" dy=".8em" y="905.5" x="938.5">方法</text></g></g><g id="minder_node32"><g id="node_expander29" style="cursor: pointer;" display="none"><path id="kity_path_340" fill="white" stroke="gray" d="M664.5,963.5A6,6,0,1,1,652.5,963.5A6,6,0,1,1,664.5,963.5"></path><path id="kity_path_341" fill="none" stroke="gray"></path></g><path id="node_outline30" fill="none" stroke="none" d="M669.5,952.5h742a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-742a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text30" fill="black"><text id="kity_text_177" text-rendering="inherit" font-size="12" dy=".8em" y="957.5" x="674.5">用自己的话说，好处是：良好的封装使得类具有清晰的对外接口，和可灵活修改的内部实现，基于这样的类来搭建软件系统，能够减少耦合</text></g></g><g id="minder_node33"><g id="node_expander43" style="cursor: pointer;"><path id="kity_path_382" fill="white" stroke="gray" d="M580.5,1249.5A6,6,0,1,1,568.5,1249.5A6,6,0,1,1,580.5,1249.5"></path><path id="kity_path_383" fill="none" stroke="gray" d="M570,1249.5L579,1249.5"></path></g><path id="node_outline44" fill="none" stroke="none" d="M585.5,1238.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text44" fill="black"><text id="kity_text_205" text-rendering="inherit" font-size="12" dy=".8em" y="1243.5" x="590.5">继承</text></g></g><g id="minder_node34"><g id="node_expander31" style="cursor: pointer;" display="none"><path id="kity_path_346" fill="white" stroke="gray" d="M664.5,1015.5A6,6,0,1,1,652.5,1015.5A6,6,0,1,1,664.5,1015.5"></path><path id="kity_path_347" fill="none" stroke="gray"></path></g><path id="node_outline32" fill="none" stroke="none" d="M669.5,1004.5h214a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-214a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text32" fill="black"><text id="kity_text_181" text-rendering="inherit" font-size="12" dy=".8em" y="1009.5" x="674.5">继承定义了类如何相互关联、共享特性</text></g></g><g id="minder_node35"><g id="node_expander34" style="cursor: pointer;"><path id="kity_path_355" fill="white" stroke="gray" d="M664.5,1093.5A6,6,0,1,1,652.5,1093.5A6,6,0,1,1,664.5,1093.5"></path><path id="kity_path_356" fill="none" stroke="gray" d="M654,1093.5L663,1093.5"></path></g><path id="node_outline35" fill="none" stroke="none" d="M669.5,1082.5h322a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-322a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text35" fill="black"><text id="kity_text_187" text-rendering="inherit" font-size="12" dy=".8em" y="1087.5" x="674.5">继承者除了具备被继承者的特性外，还具备自己独有的个性</text></g></g><g id="minder_node36"><g id="node_expander32" style="cursor: pointer;" display="none"><path id="kity_path_349" fill="white" stroke="gray" d="M1036.5,1067.5A6,6,0,1,1,1024.5,1067.5A6,6,0,1,1,1036.5,1067.5"></path><path id="kity_path_350" fill="none" stroke="gray"></path></g><path id="node_outline33" fill="none" stroke="none" d="M1041.5,1056.5h154a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-154a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text33" fill="black"><text id="kity_text_183" text-rendering="inherit" font-size="12" dy=".8em" y="1061.5" x="1046.5">猫、老虎、狮子是哺乳动物</text></g></g><g id="minder_node37"><g id="node_expander33" style="cursor: pointer;" display="none"><path id="kity_path_352" fill="white" stroke="gray" d="M1036.5,1119.5A6,6,0,1,1,1024.5,1119.5A6,6,0,1,1,1036.5,1119.5"></path><path id="kity_path_353" fill="none" stroke="gray"></path></g><path id="node_outline34" fill="none" stroke="none" d="M1041.5,1108.5h142a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-142a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text34" fill="black"><text id="kity_text_185" text-rendering="inherit" font-size="12" dy=".8em" y="1113.5" x="1046.5">钢笔、铅笔、原子笔是笔</text></g></g><g id="minder_node38"><g id="node_expander39" style="cursor: pointer;"><path id="kity_path_370" fill="white" stroke="gray" d="M664.5,1249.5A6,6,0,1,1,652.5,1249.5A6,6,0,1,1,664.5,1249.5"></path><path id="kity_path_371" fill="none" stroke="gray" d="M654,1249.5L663,1249.5"></path></g><path id="node_outline40" fill="none" stroke="none" d="M669.5,1238.5h94a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-94a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text40" fill="black"><text id="kity_text_197" text-rendering="inherit" font-size="12" dy=".8em" y="1243.5" x="674.5">继承的工作方式</text></g></g><g id="minder_node39"><g id="node_expander35" style="cursor: pointer;" display="none"><path id="kity_path_358" fill="white" stroke="gray" d="M808.5,1171.5A6,6,0,1,1,796.5,1171.5A6,6,0,1,1,808.5,1171.5"></path><path id="kity_path_359" fill="none" stroke="gray"></path></g><path id="node_outline36" fill="none" stroke="none" d="M813.5,1160.5h214a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-214a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text36" fill="black"><text id="kity_text_189" text-rendering="inherit" font-size="12" dy=".8em" y="1165.5" x="818.5">定义父类和子类，或叫做基类和派生类</text></g></g><g id="minder_node40"><g id="node_expander36" style="cursor: pointer;" display="none"><path id="kity_path_361" fill="white" stroke="gray" d="M808.5,1223.5A6,6,0,1,1,796.5,1223.5A6,6,0,1,1,808.5,1223.5"></path><path id="kity_path_362" fill="none" stroke="gray"></path></g><path id="node_outline37" fill="none" stroke="none" d="M813.5,1212.5h207a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-207a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text37" fill="black"><text id="kity_text_191" text-rendering="inherit" font-size="12" dy=".8em" y="1217.5" x="818.5">子类拥有父类非private的属性和功能</text></g></g><g id="minder_node41"><g id="node_expander37" style="cursor: pointer;" display="none"><path id="kity_path_364" fill="white" stroke="gray" d="M808.5,1275.5A6,6,0,1,1,796.5,1275.5A6,6,0,1,1,808.5,1275.5"></path><path id="kity_path_365" fill="none" stroke="gray"></path></g><path id="node_outline38" fill="none" stroke="none" d="M813.5,1264.5h202a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-202a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text38" fill="black"><text id="kity_text_193" text-rendering="inherit" font-size="12" dy=".8em" y="1269.5" x="818.5">子类可以扩展父类没有的属性和功能</text></g></g><g id="minder_node42"><g id="node_expander38" style="cursor: pointer;" display="none"><path id="kity_path_367" fill="white" stroke="gray" d="M808.5,1327.5A6,6,0,1,1,796.5,1327.5A6,6,0,1,1,808.5,1327.5"></path><path id="kity_path_368" fill="none" stroke="gray"></path></g><path id="node_outline39" fill="none" stroke="none" d="M813.5,1316.5h286a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-286a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text39" fill="black"><text id="kity_text_195" text-rendering="inherit" font-size="12" dy=".8em" y="1321.5" x="818.5">子类可以以自己的方式实现父类的方法（方法重写）</text></g></g><g id="minder_node43"><g id="node_expander40" style="cursor: pointer;" display="none"><path id="kity_path_373" fill="white" stroke="gray" d="M664.5,1379.5A6,6,0,1,1,652.5,1379.5A6,6,0,1,1,664.5,1379.5"></path><path id="kity_path_374" fill="none" stroke="gray"></path></g><path id="node_outline41" fill="none" stroke="none" d="M669.5,1368.5h190a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-190a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text41" fill="black"><text id="kity_text_199" text-rendering="inherit" font-size="12" dy=".8em" y="1373.5" x="674.5">构造方法不能被继承，只能被调用</text></g></g><g id="minder_node44"><g id="node_expander42" style="cursor: pointer;"><path id="kity_path_379" fill="white" stroke="gray" d="M664.5,1431.5A6,6,0,1,1,652.5,1431.5A6,6,0,1,1,664.5,1431.5"></path><path id="kity_path_380" fill="none" stroke="gray" d="M654,1431.5L663,1431.5"></path></g><path id="node_outline43" fill="none" stroke="none" d="M669.5,1420.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text43" fill="black"><text id="kity_text_203" text-rendering="inherit" font-size="12" dy=".8em" y="1425.5" x="674.5">优点</text></g></g><g id="minder_node45"><g id="node_expander41" style="cursor: pointer;" display="none"><path id="kity_path_376" fill="white" stroke="gray" d="M748.5,1431.5A6,6,0,1,1,736.5,1431.5A6,6,0,1,1,748.5,1431.5"></path><path id="kity_path_377" fill="none" stroke="gray"></path></g><path id="node_outline42" fill="none" stroke="none" d="M753.5,1420.5h562a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-562a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text42" fill="black"><text id="kity_text_201" text-rendering="inherit" font-size="12" dy=".8em" y="1425.5" x="758.5">子类公共的部分都放在类父类，使代码得到了共享，避免了重复，修改或扩展继承而来的实现都较为容易</text></g></g><g id="minder_node46"><g id="node_expander44" style="cursor: pointer;"><path id="kity_path_385" fill="white" stroke="gray" d="M580.5,1691.5A6,6,0,1,1,568.5,1691.5A6,6,0,1,1,580.5,1691.5"></path><path id="kity_path_386" fill="none" stroke="gray" d="M570,1691.5L579,1691.5"></path></g><path id="node_outline45" fill="none" stroke="none" d="M585.5,1680.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text45" fill="black"><text id="kity_text_207" text-rendering="inherit" font-size="12" dy=".8em" y="1685.5" x="590.5">多态</text></g></g><g id="minder_node47"><g id="node_expander46" style="cursor: pointer;"><path id="kity_path_396" fill="white" stroke="gray" d="M664.5,1483.5A6,6,0,1,1,652.5,1483.5A6,6,0,1,1,664.5,1483.5"></path><path id="kity_path_397" fill="none" stroke="gray" d="M654,1483.5L663,1483.5"></path></g><path id="node_outline47" fill="none" stroke="none" d="M669.5,1472.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text47" fill="black"><text id="kity_text_393" text-rendering="inherit" font-size="12" dy=".8em" y="1477.5" x="674.5">缺点</text></g></g><g id="minder_node49"><g id="node_expander48" style="cursor: pointer;" display="none"><path id="kity_path_412" fill="white" stroke="gray" d="M748.5,1483.5A6,6,0,1,1,736.5,1483.5A6,6,0,1,1,748.5,1483.5"></path><path id="kity_path_413" fill="none" stroke="gray"></path></g><path id="node_outline49" fill="none" stroke="none" d="M753.5,1472.5h454a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-454a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text49" fill="black"><text id="kity_text_409" text-rendering="inherit" font-size="12" dy=".8em" y="1477.5" x="758.5">继承是一种类与类之间强耦合的关系，父类变，子类跟着变，用得不好就破坏了包装</text></g></g><g id="minder_node51"><g id="node_expander50" style="cursor: pointer;" display="none"><path id="kity_path_428" fill="white" stroke="gray" d="M664.5,1535.5A6,6,0,1,1,652.5,1535.5A6,6,0,1,1,664.5,1535.5"></path><path id="kity_path_429" fill="none" stroke="gray"></path></g><path id="node_outline51" fill="none" stroke="none" d="M669.5,1524.5h394a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-394a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text51" fill="black"><text id="kity_text_425" text-rendering="inherit" font-size="12" dy=".8em" y="1529.5" x="674.5">不同的对象可以执行相同的动作，但是要通过他们自己的实现代码来执行</text></g></g><g id="minder_node52" opacity="1"><g id="node_expander51" style="cursor: pointer;"><path id="kity_path_436" fill="white" stroke="gray" d="M664.5,1639.5A6,6,0,1,1,652.5,1639.5A6,6,0,1,1,664.5,1639.5"></path><path id="kity_path_437" fill="none" stroke="gray" d="M654,1639.5L663,1639.5"></path></g><path id="node_outline52" fill="none" stroke="none" d="M669.5,1628.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text52" fill="black"><text id="kity_text_433" text-rendering="inherit" font-size="12" dy=".8em" y="1633.5" x="674.5">特点</text></g></g><g id="minder_node56"><g id="node_expander55" style="cursor: pointer;"><path id="kity_path_468" fill="white" stroke="gray" d="M664.5,1769.5A6,6,0,1,1,652.5,1769.5A6,6,0,1,1,664.5,1769.5"></path><path id="kity_path_469" fill="none" stroke="gray" d="M654,1769.5L663,1769.5"></path></g><path id="node_outline56" fill="none" stroke="none" d="M669.5,1758.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text56" fill="black"><text id="kity_text_465" text-rendering="inherit" font-size="12" dy=".8em" y="1763.5" x="674.5">实现方式</text></g></g><g id="minder_node57"><g id="node_expander56" style="cursor: pointer;" display="none"><path id="kity_path_476" fill="white" stroke="gray" d="M772.5,1743.5A6,6,0,1,1,760.5,1743.5A6,6,0,1,1,772.5,1743.5"></path><path id="kity_path_477" fill="none" stroke="gray"></path></g><path id="node_outline57" fill="none" stroke="none" d="M777.5,1732.5h370a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-370a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text57" fill="black"><text id="kity_text_473" text-rendering="inherit" font-size="12" dy=".8em" y="1737.5" x="782.5">父类奖成员声明为虚拟的，这样子类在继承父类时就必须重写该成员</text></g></g><g id="minder_node58"><g id="node_expander57" style="cursor: pointer;" display="none"><path id="kity_path_484" fill="white" stroke="gray" d="M772.5,1795.5A6,6,0,1,1,760.5,1795.5A6,6,0,1,1,772.5,1795.5"></path><path id="kity_path_485" fill="none" stroke="gray"></path></g><path id="node_outline58" fill="none" stroke="none" d="M777.5,1784.5h555a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-555a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text58" fill="black"><text id="kity_text_481" text-rendering="inherit" font-size="12" dy=".8em" y="1789.5" x="782.5">虚方法是按照其运行时类型而非编译时类型进行动态绑定调用的/调用位于对象继承链最末端的方法实现</text></g></g><g id="minder_node59"><g id="node_expander58" style="cursor: pointer;"><path id="kity_path_492" fill="white" stroke="gray" d="M443.5,1935.5A6,6,0,1,1,431.5,1935.5A6,6,0,1,1,443.5,1935.5"></path><path id="kity_path_493" fill="none" stroke="gray" d="M433,1935.5L442,1935.5"></path></g><path id="node_outline59" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M447.5,1922.5h62a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-62a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text59" fill="black"><text id="kity_text_489" text-rendering="inherit" font-size="14" dy=".8em" y="1928.5" x="464.5">重构</text></g></g><g id="minder_node60"><g id="node_expander59" style="cursor: pointer;" display="none"><path id="kity_path_500" fill="white" stroke="gray" d="M552.5,1909.5A6,6,0,1,1,540.5,1909.5A6,6,0,1,1,552.5,1909.5"></path><path id="kity_path_501" fill="none" stroke="gray"></path></g><path id="node_outline60" fill="none" stroke="none" d="M557.5,1898.5h298a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-298a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text60" fill="black"><text id="kity_text_497" text-rendering="inherit" font-size="12" dy=".8em" y="1903.5" x="562.5">提取父类，把重复的逻辑放到父类，降低代码的重复度</text></g></g><g id="minder_node53"><g id="node_expander52" style="cursor: pointer;" display="none"><path id="kity_path_444" fill="white" stroke="gray" d="M748.5,1587.5A6,6,0,1,1,736.5,1587.5A6,6,0,1,1,748.5,1587.5"></path><path id="kity_path_445" fill="none" stroke="gray"></path></g><path id="node_outline53" fill="none" stroke="none" d="M753.5,1576.5h130a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-130a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text53" fill="black"><text id="kity_text_441" text-rendering="inherit" font-size="12" dy=".8em" y="1581.5" x="758.5">子类以父类的身份出现</text></g></g><g id="minder_node54"><g id="node_expander53" style="cursor: pointer;" display="none"><path id="kity_path_452" fill="white" stroke="gray" d="M748.5,1639.5A6,6,0,1,1,736.5,1639.5A6,6,0,1,1,748.5,1639.5"></path><path id="kity_path_453" fill="none" stroke="gray"></path></g><path id="node_outline54" fill="none" stroke="none" d="M753.5,1628.5h166a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-166a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text54" fill="black"><text id="kity_text_449" text-rendering="inherit" font-size="12" dy=".8em" y="1633.5" x="758.5">子类在工作时使用自己的方法</text></g></g><g id="minder_node55"><g id="node_expander54" style="cursor: pointer;" display="none"><path id="kity_path_460" fill="white" stroke="gray" d="M748.5,1691.5A6,6,0,1,1,736.5,1691.5A6,6,0,1,1,748.5,1691.5"></path><path id="kity_path_461" fill="none" stroke="gray"></path></g><path id="node_outline55" fill="none" stroke="none" d="M753.5,1680.5h334a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-334a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text55" fill="black"><text id="kity_text_457" text-rendering="inherit" font-size="12" dy=".8em" y="1685.5" x="758.5">子类以父类的身份出现时，不可以使用自己特有的属性和方法</text></g></g><g id="minder_node62"><g id="node_expander61" style="cursor: pointer;"><path id="kity_path_522" fill="white" stroke="gray" d="M443.5,2114.5A6,6,0,1,1,431.5,2114.5A6,6,0,1,1,443.5,2114.5"></path><path id="kity_path_523" fill="none" stroke="gray" d="M433,2114.5L442,2114.5"></path></g><path id="node_outline62" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M447.5,2101.5h76a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-76a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text62" fill="black"><text id="kity_text_519" text-rendering="inherit" font-size="14" dy=".8em" y="2107.5" x="464.5">抽象类</text></g></g><g id="minder_node63"><g id="node_expander62" style="cursor: pointer;" display="none"><path id="kity_path_530" fill="white" stroke="gray" d="M566.5,2023.5A6,6,0,1,1,554.5,2023.5A6,6,0,1,1,566.5,2023.5"></path><path id="kity_path_531" fill="none" stroke="gray"></path></g><path id="node_outline63" fill="none" stroke="none" d="M571.5,2012.5h250a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-250a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text63" fill="black"><text id="kity_text_527" text-rendering="inherit" font-size="12" dy=".8em" y="2017.5" x="576.5">实例化没有任何意义的父类可以声明为抽象类</text></g></g><g id="minder_node64"><g id="node_expander63" style="cursor: pointer;"><path id="kity_path_538" fill="white" stroke="gray" d="M566.5,2075.5A6,6,0,1,1,554.5,2075.5A6,6,0,1,1,566.5,2075.5"></path><path id="kity_path_539" fill="none" stroke="gray" d="M556,2075.5L565,2075.5"></path></g><path id="node_outline64" fill="none" stroke="none" d="M571.5,2064.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text64" fill="black"><text id="kity_text_535" text-rendering="inherit" font-size="12" dy=".8em" y="2069.5" x="576.5">实现方式</text></g></g><g id="minder_node66"><g id="node_expander65" style="cursor: pointer;" display="none"><path id="kity_path_554" fill="white" stroke="gray" d="M664.5,1847.5A6,6,0,1,1,652.5,1847.5A6,6,0,1,1,664.5,1847.5"></path><path id="kity_path_555" fill="none" stroke="gray"></path></g><path id="node_outline66" fill="none" stroke="none" d="M669.5,1836.5h382a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-382a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text66" fill="black"><text id="kity_text_551" text-rendering="inherit" font-size="12" dy=".8em" y="1841.5" x="674.5">可能出现的问题：子类没有实现相应的方法，在运行中调用会出现异常</text></g></g><g id="minder_node67"><g id="node_expander66" style="cursor: pointer;" display="none"><path id="kity_path_562" fill="white" stroke="gray" d="M674.5,2075.5A6,6,0,1,1,662.5,2075.5A6,6,0,1,1,674.5,2075.5"></path><path id="kity_path_563" fill="none" stroke="gray"></path></g><path id="node_outline67" fill="none" stroke="none" d="M679.5,2064.5h287a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-287a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text67" fill="black"><text id="kity_text_559" text-rendering="inherit" font-size="12" dy=".8em" y="2069.5" x="684.5">将父类声明为抽象类，并定义抽象方法（abstract）</text></g></g><g id="minder_node68"><g id="node_expander67" style="cursor: pointer;"><path id="kity_path_570" fill="white" stroke="gray" d="M566.5,2205.5A6,6,0,1,1,554.5,2205.5A6,6,0,1,1,566.5,2205.5"></path><path id="kity_path_571" fill="none" stroke="gray" d="M556,2205.5L565,2205.5"></path></g><path id="node_outline68" fill="none" stroke="none" d="M571.5,2194.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text68" fill="black"><text id="kity_text_567" text-rendering="inherit" font-size="12" dy=".8em" y="2199.5" x="576.5">特点</text></g></g><g id="minder_node69"><g id="node_expander68" style="cursor: pointer;" display="none"><path id="kity_path_578" fill="white" stroke="gray" d="M650.5,2127.5A6,6,0,1,1,638.5,2127.5A6,6,0,1,1,650.5,2127.5"></path><path id="kity_path_579" fill="none" stroke="gray"></path></g><path id="node_outline69" fill="none" stroke="none" d="M655.5,2116.5h250a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-250a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text69" fill="black"><text id="kity_text_575" text-rendering="inherit" font-size="12" dy=".8em" y="2121.5" x="660.5">子类继承抽象类时，必须实现父类的抽象方法</text></g></g><g id="minder_node70"><g id="node_expander69" style="cursor: pointer;" display="none"><path id="kity_path_586" fill="white" stroke="gray" d="M650.5,2179.5A6,6,0,1,1,638.5,2179.5A6,6,0,1,1,650.5,2179.5"></path><path id="kity_path_587" fill="none" stroke="gray"></path></g><path id="node_outline70" fill="none" stroke="none" d="M655.5,2168.5h202a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-202a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text70" fill="black"><text id="kity_text_583" text-rendering="inherit" font-size="12" dy=".8em" y="2173.5" x="660.5">抽象类是用来继承的，不能被实例化</text></g></g><g id="minder_node71"><g id="node_expander70" style="cursor: pointer;" display="none"><path id="kity_path_594" fill="white" stroke="gray" d="M650.5,2231.5A6,6,0,1,1,638.5,2231.5A6,6,0,1,1,650.5,2231.5"></path><path id="kity_path_595" fill="none" stroke="gray"></path></g><path id="node_outline71" fill="none" stroke="none" d="M655.5,2220.5h298a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-298a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text71" fill="black"><text id="kity_text_591" text-rendering="inherit" font-size="12" dy=".8em" y="2225.5" x="660.5">如果类中包含抽象方法，那么类就必须被定义为抽象类</text></g></g><g id="minder_node74"><g id="node_expander73" style="cursor: pointer;"><path id="kity_path_618" fill="white" stroke="gray" d="M443.5,2397.5A6,6,0,1,1,431.5,2397.5A6,6,0,1,1,443.5,2397.5"></path><path id="kity_path_619" fill="none" stroke="gray" d="M433,2397.5L442,2397.5"></path></g><path id="node_outline74" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M447.5,2384.5h62a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-62a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text74" fill="black"><text id="kity_text_615" text-rendering="inherit" font-size="14" dy=".8em" y="2390.5" x="464.5">接口</text></g></g><g id="minder_node75"><g id="node_expander74" style="cursor: pointer;" display="none"><path id="kity_path_626" fill="white" stroke="gray" d="M552.5,2345.5A6,6,0,1,1,540.5,2345.5A6,6,0,1,1,552.5,2345.5"></path><path id="kity_path_627" fill="none" stroke="gray"></path></g><path id="node_outline75" fill="none" stroke="none" d="M557.5,2334.5h418a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-418a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text75" fill="black"><text id="kity_text_623" text-rendering="inherit" font-size="12" dy=".8em" y="2339.5" x="562.5">对行为的抽象，把隐式公共方法和属性组合起来，以封装特定功能的一个集合</text></g></g><g id="minder_node76"><g id="node_expander75" style="cursor: pointer;" display="none"><path id="kity_path_634" fill="white" stroke="gray" d="M552.5,2397.5A6,6,0,1,1,540.5,2397.5A6,6,0,1,1,552.5,2397.5"></path><path id="kity_path_635" fill="none" stroke="gray"></path></g><path id="node_outline76" fill="none" stroke="none" d="M557.5,2386.5h538a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-538a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text76" fill="black"><text id="kity_text_631" text-rendering="inherit" font-size="12" dy=".8em" y="2391.5" x="562.5">适用于希望给特定类型的对象添加相同的方法，但对象之间的关系又不适合使用继承进行关联的场景</text></g></g><g id="minder_node78"><g id="node_expander77" style="cursor: pointer;" display="none"><path id="kity_path_650" fill="white" stroke="gray" d="M552.5,2449.5A6,6,0,1,1,540.5,2449.5A6,6,0,1,1,552.5,2449.5"></path><path id="kity_path_651" fill="none" stroke="gray" d="M542,2449.5L551,2449.5"></path></g><path id="node_outline78" fill="none" stroke="none" d="M557.5,2438.5h142a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-142a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text78" fill="black"><text id="kity_text_647" text-rendering="inherit" font-size="12" dy=".8em" y="2443.5" x="562.5">一个类可以实现多个接口</text></g></g><g id="minder_node80"><g id="node_expander79" style="cursor: pointer;" display="none"><path id="kity_path_666" fill="white" stroke="gray" d="M650.5,2283.5A6,6,0,1,1,638.5,2283.5A6,6,0,1,1,650.5,2283.5"></path><path id="kity_path_667" fill="none" stroke="gray"></path></g><path id="node_outline80" fill="none" stroke="none" d="M655.5,2272.5h154a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-154a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text80" fill="black"><text id="kity_text_663" text-rendering="inherit" font-size="12" dy=".8em" y="2277.5" x="660.5">一个类只能继承一个抽象类</text></g></g><g id="minder_node82"><g id="node_expander81" style="cursor: pointer;" display="none"><path id="kity_path_682" fill="white" stroke="gray" d="M552.5,1961.5A6,6,0,1,1,540.5,1961.5A6,6,0,1,1,552.5,1961.5"></path><path id="kity_path_683" fill="none" stroke="gray"></path></g><path id="node_outline82" fill="none" stroke="none" d="M557.5,1950.5h262a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-262a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text82" fill="black"><text id="kity_text_679" text-rendering="inherit" font-size="12" dy=".8em" y="1955.5" x="562.5">敏捷开发的思想：通过重构改善既有代码的设计</text></g></g><g id="minder_node83"><g id="node_expander82" style="cursor: pointer;"><path id="kity_path_690" fill="white" stroke="gray" d="M443.5,2647.5A6,6,0,1,1,431.5,2647.5A6,6,0,1,1,443.5,2647.5"></path><path id="kity_path_691" fill="none" stroke="gray" d="M433,2647.5L442,2647.5"></path></g><path id="node_outline83" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M447.5,2634.5h62a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-62a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text83" fill="black"><text id="kity_text_687" text-rendering="inherit" font-size="14" dy=".8em" y="2640.5" x="464.5">集合</text></g></g><g id="minder_node84"><g id="node_expander83" style="cursor: pointer;"><path id="kity_path_698" fill="white" stroke="gray" d="M552.5,2537.5A6,6,0,1,1,540.5,2537.5A6,6,0,1,1,552.5,2537.5"></path><path id="kity_path_699" fill="none" stroke="gray" d="M542,2537.5L551,2537.5"></path></g><path id="node_outline84" fill="none" stroke="none" d="M557.5,2526.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text84" fill="black"><text id="kity_text_695" text-rendering="inherit" font-size="12" dy=".8em" y="2531.5" x="562.5">数组</text></g></g><g id="minder_node85"><g id="node_expander84" style="cursor: pointer;" display="none"><path id="kity_path_706" fill="white" stroke="gray" d="M636.5,2511.5A6,6,0,1,1,624.5,2511.5A6,6,0,1,1,636.5,2511.5"></path><path id="kity_path_707" fill="none" stroke="gray"></path></g><path id="node_outline85" fill="none" stroke="none" d="M641.5,2500.5h454a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-454a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text85" fill="black"><text id="kity_text_703" text-rendering="inherit" font-size="12" dy=".8em" y="2505.5" x="646.5">优点：在内存中连续存储，因此可以快速而容易地从头到尾遍历元素；是类型安全的</text></g></g><g id="minder_node86"><g id="node_expander85" style="cursor: pointer;" display="none"><path id="kity_path_714" fill="white" stroke="gray" d="M636.5,2563.5A6,6,0,1,1,624.5,2563.5A6,6,0,1,1,636.5,2563.5"></path><path id="kity_path_715" fill="none" stroke="gray"></path></g><path id="node_outline86" fill="none" stroke="none" d="M641.5,2552.5h382a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-382a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text86" fill="black"><text id="kity_text_711" text-rendering="inherit" font-size="12" dy=".8em" y="2557.5" x="646.5">缺点：创建时必须要指定数组的长度，涉及插入、删除的操作比较困难</text></g></g><g id="minder_node87"><g id="node_expander86" style="cursor: pointer;" display="none"><path id="kity_path_722" fill="white" stroke="gray" d="M552.5,2615.5A6,6,0,1,1,540.5,2615.5A6,6,0,1,1,552.5,2615.5"></path><path id="kity_path_723" fill="none" stroke="gray"></path></g><path id="node_outline87" fill="none" stroke="none" d="M557.5,2604.5h713a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-713a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text87" fill="black"><text id="kity_text_719" text-rendering="inherit" font-size="12" dy=".8em" y="2609.5" x="562.5">.Net Framework中的集合：用于数据存储和检索的专用类，提供对堆栈、队列、链表和哈希表的支持，大多数集合类实现相同的接口</text></g></g><g id="minder_node88" opacity="1"><g id="node_expander87" style="cursor: pointer;" display="none"><path id="kity_path_730" fill="white" stroke="gray" d="M636.5,2719.5A6,6,0,1,1,624.5,2719.5A6,6,0,1,1,636.5,2719.5"></path><path id="kity_path_731" fill="none" stroke="gray"></path></g><path id="node_outline88" fill="none" stroke="none" d="M641.5,2708.5h141a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-141a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text88" fill="black"><text id="kity_text_727" text-rendering="inherit" font-size="12" dy=".8em" y="2713.5" x="646.5">ArrayList不是类型安全的</text></g></g><g id="minder_node89"><g id="node_expander88" style="cursor: pointer;"><path id="kity_path_738" fill="white" stroke="gray" d="M552.5,2667.5A6,6,0,1,1,540.5,2667.5A6,6,0,1,1,552.5,2667.5"></path><path id="kity_path_739" fill="none" stroke="gray" d="M542,2667.5L551,2667.5"></path></g><path id="node_outline89" fill="none" stroke="none" d="M557.5,2656.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text89" fill="black"><text id="kity_text_735" text-rendering="inherit" font-size="12" dy=".8em" y="2661.5" x="562.5">优点</text></g></g><g id="minder_node90"><g id="node_expander89" style="cursor: pointer;"><path id="kity_path_746" fill="white" stroke="gray" d="M552.5,2758.5A6,6,0,1,1,540.5,2758.5A6,6,0,1,1,552.5,2758.5"></path><path id="kity_path_747" fill="none" stroke="gray" d="M542,2758.5L551,2758.5"></path></g><path id="node_outline90" fill="none" stroke="none" d="M557.5,2747.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text90" fill="black"><text id="kity_text_743" text-rendering="inherit" font-size="12" dy=".8em" y="2752.5" x="562.5">缺点</text></g></g><g id="minder_node91"><g id="node_expander90" style="cursor: pointer;" display="none"><path id="kity_path_754" fill="white" stroke="gray" d="M636.5,2667.5A6,6,0,1,1,624.5,2667.5A6,6,0,1,1,636.5,2667.5"></path><path id="kity_path_755" fill="none" stroke="gray"></path></g><path id="node_outline91" fill="none" stroke="none" d="M641.5,2656.5h190a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-190a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text91" fill="black"><text id="kity_text_751" text-rendering="inherit" font-size="12" dy=".8em" y="2661.5" x="646.5">按需调整大小、保证数据的连续性</text></g></g><g id="minder_node92"><g id="node_expander91" style="cursor: pointer;"><path id="kity_path_762" fill="white" stroke="gray" d="M636.5,2797.5A6,6,0,1,1,624.5,2797.5A6,6,0,1,1,636.5,2797.5"></path><path id="kity_path_763" fill="none" stroke="gray" d="M626,2797.5L635,2797.5"></path></g><path id="node_outline92" fill="none" stroke="none" d="M641.5,2786.5h178a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-178a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text92" fill="black"><text id="kity_text_759" text-rendering="inherit" font-size="12" dy=".8em" y="2791.5" x="646.5">使用过程中需要进行装箱和拆箱</text></g></g><g id="minder_node93"><g id="node_expander92" style="cursor: pointer;" display="none"><path id="kity_path_770" fill="white" stroke="gray" d="M864.5,2771.5A6,6,0,1,1,852.5,2771.5A6,6,0,1,1,864.5,2771.5"></path><path id="kity_path_771" fill="none" stroke="gray"></path></g><path id="node_outline93" fill="none" stroke="none" d="M869.5,2760.5h406a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-406a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text93" fill="black"><text id="kity_text_767" text-rendering="inherit" font-size="12" dy=".8em" y="2765.5" x="874.5">相对于简单的赋值而言，装箱和拆箱过程（类型转换）需要进行大量的计算</text></g></g><g id="minder_node94"><g id="node_expander93" style="cursor: pointer;" display="none"><path id="kity_path_778" fill="white" stroke="gray" d="M864.5,2823.5A6,6,0,1,1,852.5,2823.5A6,6,0,1,1,864.5,2823.5"></path><path id="kity_path_779" fill="none" stroke="gray"></path></g><path id="node_outline94" fill="none" stroke="none" d="M869.5,2812.5h298a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-298a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text94" fill="black"><text id="kity_text_775" text-rendering="inherit" font-size="12" dy=".8em" y="2817.5" x="874.5">对值类型进行装箱时，必须分配并构造一个全新的对象</text></g></g><g id="minder_node95"><g id="node_expander94" style="cursor: pointer;"><path id="kity_path_786" fill="white" stroke="gray" d="M443.5,3028.5A6,6,0,1,1,431.5,3028.5A6,6,0,1,1,443.5,3028.5"></path><path id="kity_path_787" fill="none" stroke="gray" d="M433,3028.5L442,3028.5"></path></g><path id="node_outline95" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M447.5,3015.5h62a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-62a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text95" fill="black"><text id="kity_text_783" text-rendering="inherit" font-size="14" dy=".8em" y="3021.5" x="464.5">泛型</text></g></g><g id="minder_node96"><g id="node_expander95" style="cursor: pointer;" display="none"><path id="kity_path_794" fill="white" stroke="gray" d="M552.5,2885.5A6,6,0,1,1,540.5,2885.5A6,6,0,1,1,552.5,2885.5"></path><path id="kity_path_795" fill="none" stroke="gray"></path></g><path id="node_outline96" fill="none" stroke="none" d="M557.5,2874.5h730a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-730a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text96" fill="black"><text id="kity_text_791" text-rendering="inherit" font-size="12" dy=".8em" y="2879.5" x="562.5">泛型是具有占位符（类型参数）的类、结构、接口和方法，这些占位符是类、结构、接口和方法所存储或使用的一个或多个类型的占位符</text></g></g><g id="minder_node97"><g id="node_expander96" style="cursor: pointer;"><path id="kity_path_802" fill="white" stroke="gray" d="M552.5,2963.5A6,6,0,1,1,540.5,2963.5A6,6,0,1,1,552.5,2963.5"></path><path id="kity_path_803" fill="none" stroke="gray" d="M542,2963.5L551,2963.5"></path></g><path id="node_outline97" fill="none" stroke="none" d="M557.5,2952.5h70a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-70a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text97" fill="black"><text id="kity_text_799" text-rendering="inherit" font-size="12" dy=".8em" y="2957.5" x="562.5">泛型集合类</text></g></g><g id="minder_node98"><g id="node_expander97" style="cursor: pointer;" display="none"><path id="kity_path_810" fill="white" stroke="gray" d="M672.5,2937.5A6,6,0,1,1,660.5,2937.5A6,6,0,1,1,672.5,2937.5"></path><path id="kity_path_811" fill="none" stroke="gray"></path></g><path id="node_outline98" fill="none" stroke="none" d="M677.5,2926.5h286a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-286a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text98" fill="black"><text id="kity_text_807" text-rendering="inherit" font-size="12" dy=".8em" y="2931.5" x="682.5">可以将类型参数用作它所存储的对象的类型的占位符</text></g></g><g id="minder_node99"><g id="node_expander98" style="cursor: pointer;" display="none"><path id="kity_path_818" fill="white" stroke="gray" d="M672.5,2989.5A6,6,0,1,1,660.5,2989.5A6,6,0,1,1,672.5,2989.5"></path><path id="kity_path_819" fill="none" stroke="gray"></path></g><path id="node_outline99" fill="none" stroke="none" d="M677.5,2978.5h286a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-286a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text99" fill="black"><text id="kity_text_815" text-rendering="inherit" font-size="12" dy=".8em" y="2983.5" x="682.5">类型参数作为其字段的类型和其方法的参数类型出现</text></g></g><g id="minder_node101"><g id="node_expander100" style="cursor: pointer;"><path id="kity_path_834" fill="white" stroke="gray" d="M552.5,3067.5A6,6,0,1,1,540.5,3067.5A6,6,0,1,1,552.5,3067.5"></path><path id="kity_path_835" fill="none" stroke="gray" d="M542,3067.5L551,3067.5"></path></g><path id="node_outline101" fill="none" stroke="none" d="M557.5,3056.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text101" fill="black"><text id="kity_text_831" text-rendering="inherit" font-size="12" dy=".8em" y="3061.5" x="562.5">使用方法</text></g></g><g id="minder_node102"><g id="node_expander101" style="cursor: pointer;" display="none"><path id="kity_path_842" fill="white" stroke="gray" d="M660.5,3041.5A6,6,0,1,1,648.5,3041.5A6,6,0,1,1,660.5,3041.5"></path><path id="kity_path_843" fill="none" stroke="gray"></path></g><path id="node_outline102" fill="none" stroke="none" d="M665.5,3030.5h130a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-130a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text102" fill="black"><text id="kity_text_839" text-rendering="inherit" font-size="12" dy=".8em" y="3035.5" x="670.5">实例化时指定类型参数</text></g></g><g id="minder_node103"><g id="node_expander102" style="cursor: pointer;" display="none"><path id="kity_path_850" fill="white" stroke="gray" d="M660.5,3093.5A6,6,0,1,1,648.5,3093.5A6,6,0,1,1,660.5,3093.5"></path><path id="kity_path_851" fill="none" stroke="gray"></path></g><path id="node_outline103" fill="none" stroke="none" d="M665.5,3082.5h274a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-274a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text103" fill="black"><text id="kity_text_847" text-rendering="inherit" font-size="12" dy=".8em" y="3087.5" x="670.5">编程过程中若传入错误类型的对象，编译时会报错</text></g></g><g id="minder_node105"><g id="node_expander104" style="cursor: pointer;"><path id="kity_path_866" fill="white" stroke="gray" d="M552.5,3171.5A6,6,0,1,1,540.5,3171.5A6,6,0,1,1,552.5,3171.5"></path><path id="kity_path_867" fill="none" stroke="gray" d="M542,3171.5L551,3171.5"></path></g><path id="node_outline105" fill="none" stroke="none" d="M557.5,3160.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text105" fill="black"><text id="kity_text_863" text-rendering="inherit" font-size="12" dy=".8em" y="3165.5" x="562.5">优点</text></g></g><g id="minder_node106"><g id="node_expander105" style="cursor: pointer;" display="none"><path id="kity_path_874" fill="white" stroke="gray" d="M636.5,3145.5A6,6,0,1,1,624.5,3145.5A6,6,0,1,1,636.5,3145.5"></path><path id="kity_path_875" fill="none" stroke="gray"></path></g><path id="node_outline106" fill="none" stroke="none" d="M641.5,3134.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text106" fill="black"><text id="kity_text_871" text-rendering="inherit" font-size="12" dy=".8em" y="3139.5" x="646.5">类型安全</text></g></g><g id="minder_node107"><g id="node_expander106" style="cursor: pointer;" display="none"><path id="kity_path_882" fill="white" stroke="gray" d="M636.5,3197.5A6,6,0,1,1,624.5,3197.5A6,6,0,1,1,636.5,3197.5"></path><path id="kity_path_883" fill="none" stroke="gray"></path></g><path id="node_outline107" fill="none" stroke="none" d="M641.5,3186.5h502a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-502a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text107" fill="black"><text id="kity_text_879" text-rendering="inherit" font-size="12" dy=".8em" y="3191.5" x="646.5">因为使用泛型时不需要装箱拆箱，因此当类型参数为值类型，泛型集合的性能优于非泛型集合</text></g></g><g id="minder_node108"><g id="node_expander107" style="cursor: pointer;"><path id="kity_path_890" fill="white" stroke="gray" d="M443.5,3350.5A6,6,0,1,1,431.5,3350.5A6,6,0,1,1,443.5,3350.5"></path><path id="kity_path_891" fill="none" stroke="gray" d="M433,3350.5L442,3350.5"></path></g><path id="node_outline108" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M447.5,3337.5h104a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-104a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text108" fill="black"><text id="kity_text_887" text-rendering="inherit" font-size="14" dy=".8em" y="3343.5" x="464.5">委托与事件</text></g></g><g id="minder_node109"><g id="node_expander108" style="cursor: pointer;"><path id="kity_path_898" fill="white" stroke="gray" d="M594.5,3259.5A6,6,0,1,1,582.5,3259.5A6,6,0,1,1,594.5,3259.5"></path><path id="kity_path_899" fill="none" stroke="gray" d="M584,3259.5L593,3259.5"></path></g><path id="node_outline109" fill="none" stroke="none" d="M599.5,3248.5h400a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-400a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text109" fill="black"><text id="kity_text_895" text-rendering="inherit" font-size="12" dy=".8em" y="3253.5" x="604.5">委托（delegate）是对函数的封装，可以当作给方法的特征指定一个名称</text></g></g><g id="minder_node110"><g id="node_expander109" style="cursor: pointer;"><path id="kity_path_906" fill="white" stroke="gray" d="M594.5,3311.5A6,6,0,1,1,582.5,3311.5A6,6,0,1,1,594.5,3311.5"></path><path id="kity_path_907" fill="none" stroke="gray" d="M584,3311.5L593,3311.5"></path></g><path id="node_outline110" fill="none" stroke="none" d="M599.5,3300.5h560a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-560a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text110" fill="black"><text id="kity_text_903" text-rendering="inherit" font-size="12" dy=".8em" y="3305.5" x="604.5">事件（event）是委托的一种特殊形式，当发生有意义的事情时，事件对象处理通知过程（观察者模式）</text></g></g><g id="minder_node111" opacity="1"><g id="node_expander110" style="cursor: pointer;" display="none"><path id="kity_path_914" fill="white" stroke="gray" d="M1044.5,3259.5A6,6,0,1,1,1032.5,3259.5A6,6,0,1,1,1044.5,3259.5"></path><path id="kity_path_915" fill="none" stroke="gray"></path></g><path id="node_outline111" fill="none" stroke="none" d="M1049.5,3248.5h490a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-490a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text111" fill="black"><text id="kity_text_911" text-rendering="inherit" font-size="12" dy=".8em" y="3253.5" x="1054.5">委托是一种引用方法的类型，一旦为委托分配了方法，委托将与该方法具有完全相同的行为</text></g></g><g id="kity_g_12" display="none"><path id="kity_path_13" fill="none" stroke="rgb(66, 94, 112)" d="M599.5,3267.5h322a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-322a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="5"></path></g><g id="minder_node112"><g id="node_expander111" style="cursor: pointer;"><path id="kity_path_922" fill="white" stroke="gray" d="M594.5,3441.5A6,6,0,1,1,582.5,3441.5A6,6,0,1,1,594.5,3441.5"></path><path id="kity_path_923" fill="none" stroke="gray" d="M584,3441.5L593,3441.5"></path></g><path id="node_outline112" fill="none" stroke="none" d="M599.5,3430.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text112" fill="black"><text id="kity_text_919" text-rendering="inherit" font-size="12" dy=".8em" y="3435.5" x="604.5">使用方法</text></g></g><g id="minder_node113"><g id="node_expander112" style="cursor: pointer;"><path id="kity_path_930" fill="white" stroke="gray" d="M702.5,3363.5A6,6,0,1,1,690.5,3363.5A6,6,0,1,1,702.5,3363.5"></path><path id="kity_path_931" fill="none" stroke="gray" d="M692,3363.5L701,3363.5"></path></g><path id="node_outline113" fill="none" stroke="none" d="M707.5,3352.5h94a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-94a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text113" fill="black"><text id="kity_text_927" text-rendering="inherit" font-size="12" dy=".8em" y="3357.5" x="712.5">声明委托、事件</text></g></g><g id="minder_node114"><g id="node_expander113" style="cursor: pointer;" display="none"><path id="kity_path_938" fill="white" stroke="gray" d="M702.5,3519.5A6,6,0,1,1,690.5,3519.5A6,6,0,1,1,702.5,3519.5"></path><path id="kity_path_939" fill="none" stroke="gray"></path></g><path id="node_outline114" fill="none" stroke="none" d="M707.5,3508.5h502a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-502a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text114" fill="black"><text id="kity_text_935" text-rendering="inherit" font-size="12" dy=".8em" y="3513.5" x="712.5">“有意义的事情发生时”，执行事件“miceRun()”，效果是执行事件中的所有委托函数实例</text></g></g><g id="minder_node115"><g id="node_expander114" style="cursor: pointer;" display="none"><path id="kity_path_946" fill="white" stroke="gray" d="M702.5,3415.5A6,6,0,1,1,690.5,3415.5A6,6,0,1,1,702.5,3415.5"></path><path id="kity_path_947" fill="none" stroke="gray"></path></g><path id="node_outline115" fill="none" stroke="none" d="M707.5,3404.5h740a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-740a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text115" fill="black"><text id="kity_text_943" text-rendering="inherit" font-size="12" dy=".8em" y="3409.5" x="712.5">实例化委托，delegateA = new CatShoutEventHandler(mouseA.Run()), delegateB = new CatShoutEventHandler(mouseB.Run())</text></g></g><g id="minder_node116"><g id="node_expander115" style="cursor: pointer;" display="none"><path id="kity_path_954" fill="white" stroke="gray" d="M1204.5,3311.5A6,6,0,1,1,1192.5,3311.5A6,6,0,1,1,1204.5,3311.5"></path><path id="kity_path_955" fill="none" stroke="gray"></path></g><path id="node_outline116" fill="none" stroke="none" d="M1209.5,3300.5h370a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-370a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text116" fill="black"><text id="kity_text_951" text-rendering="inherit" font-size="12" dy=".8em" y="3305.5" x="1214.5">在发生其他类多对象关注的事情时，类或对象可以通过事件通知他们</text></g></g><g id="minder_node117"><g id="node_expander116" style="cursor: pointer;" display="none"><path id="kity_path_962" fill="white" stroke="gray" d="M846.5,3363.5A6,6,0,1,1,834.5,3363.5A6,6,0,1,1,846.5,3363.5"></path><path id="kity_path_963" fill="none" stroke="gray"></path></g><path id="node_outline117" fill="none" stroke="none" d="M851.5,3352.5h506a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-506a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text117" fill="black"><text id="kity_text_959" text-rendering="inherit" font-size="12" dy=".8em" y="3357.5" x="856.5">事件的类型是委托（例如事件“miceRun”的类型是委托函数“CatShoutEventHandler”）</text></g></g><g id="minder_node118"><g id="node_expander117" style="cursor: pointer;" display="none"><path id="kity_path_970" fill="white" stroke="gray" d="M702.5,3467.5A6,6,0,1,1,690.5,3467.5A6,6,0,1,1,702.5,3467.5"></path><path id="kity_path_971" fill="none" stroke="gray"></path></g><path id="node_outline118" fill="none" stroke="none" d="M707.5,3456.5h428a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-428a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text118" fill="black"><text id="kity_text_967" text-rendering="inherit" font-size="12" dy=".8em" y="3461.5" x="712.5">把委托实例注册到事件中，miceRun += delegateA, miceRun += delegateB</text></g></g></g></g></svg>